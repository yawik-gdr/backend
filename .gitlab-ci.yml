cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

stages:
  - test
  - deploy

testing:
  image: node:14
  script:
    - cp .env.example .env
    - yarn
    - mkdir .tmp
    - touch .tmp/data.db
    - yarn test
  cache:
    paths:
      - node_modules/
  artifacts:
    expire_in: 1 days
    when: on_success
    paths:
      - node_modules/
  variables:
    NODE_ENV: test

.build_docker: &build_docker
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$TAG || true
    - docker build --target $TARGET -t $CI_REGISTRY_IMAGE:$TAG .
    - docker push $CI_REGISTRY_IMAGE:$TAG

build docker dev:
  <<: *build_docker
  variables:
    NODE_ENV: development
    TARGET: yawik_dev
    TAG: dev
  only:
    - main

build docker latest:
  <<: *build_docker
  only:
    - tags
  variables:
    NODE_ENV: development
    TARGET: yawik_prod
    TAG: latest

deploy:
  image: registry.gitlab.com/yawik/docker/yarn-git-ssh-rsync:main
  stage: deploy
  script:
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - echo "$SSH_SERVER_HOSTKEYS" > ~/.ssh/known_hosts
    - yarn
    - NODE_ENV=production yarn build
    - git config --global user.email "you@example.com"
    - git config --global user.name "Your Name"
    - git stash
    - pm2 deploy ecosystem.config.js production
  only:
  - main
